{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91918\\\\Desktop\\\\gta\\\\src\\\\components\\\\Products.js\",\n    _s = $RefreshSig$();\n\nimport Navbar from \"./Navbar\";\nimport NFTTile from \"./NFTTile\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Footer from \"./Footer\";\nimport background from \"../images/boat.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Marketplace() {\n  _s();\n\n  const sampleData = [{\n    \"name\": \"Ape NFT#1\",\n    \"description\": \"Cool Ape\",\n    \"website\": \"http://axieinfinity.io\",\n    \"image\": \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n    \"price\": \"0.03ETH\",\n    \"currentlySelling\": \"True\",\n    \"address\": \"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\"\n  }, {\n    \"name\": \"Ape NFT#2\",\n    \"description\": \"Angry Ape\",\n    \"website\": \"http://axieinfinity.io\",\n    \"image\": \"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\n    \"price\": \"0.03ETH\",\n    \"currentlySelling\": \"True\",\n    \"address\": \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"\n  }, {\n    \"name\": \"Ape NFT#3\",\n    \"description\": \"Sad Ape\",\n    \"website\": \"http://axieinfinity.io\",\n    \"image\": \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n    \"price\": \"0.03ETH\",\n    \"currentlySelling\": \"True\",\n    \"address\": \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"\n  }];\n  const [data, updateData] = useState(sampleData);\n  const [dataFetched, updateFetched] = useState(false);\n\n  async function getAllNFTs() {\n    const ethers = require(\"ethers\"); //After adding your Hardhat network to your metamask, this code will get providers and signers\n\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner(); //Pull the deployed contract instance\n\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer); //create an NFT Token\n\n    let transaction = await contract.getAllNFTs(); //Fetch all the details of every NFT from the contract and display\n\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios.get(tokenURI);\n      meta = meta.data;\n      let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: meta.image,\n        name: meta.name,\n        description: meta.description\n      };\n      return item;\n    }));\n    updateFetched(true);\n    updateData(items);\n  }\n\n  if (!dataFetched) getAllNFTs();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"min-height\": \"100vh\",\n      backgroundImage: `url(${background})`,\n      height: '100vh',\n      width: '100vw',\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto py-8  sm:px-6 lg:max-w-7xl\",\n      style: {\n        \"min-height\": \"100vh\",\n        backgroundImage: `url(${background})`,\n        height: '100vh',\n        width: '100vw',\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: 'cover'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:text-xl font-bold text-black\",\n        children: \"Our Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\",\n        children: data.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(NFTTile, {\n            data: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Marketplace, \"eoOZIC3fpxTnVeH+5XYnEv0RFm0=\");\n\n_c = Marketplace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["Navbar","NFTTile","MarketplaceJSON","axios","useState","Footer","background","Marketplace","sampleData","data","updateData","dataFetched","updateFetched","getAllNFTs","ethers","require","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","address","abi","transaction","items","Promise","all","map","i","tokenURI","tokenId","meta","get","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","backgroundImage","height","width","backgroundRepeat","backgroundSize","value","index"],"sources":["C:/Users/91918/Desktop/gta/src/components/Products.js"],"sourcesContent":["import Navbar from \"./Navbar\";\nimport NFTTile from \"./NFTTile\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Footer from \"./Footer\";\nimport background from \"../images/boat.png\";\n\nexport default function Marketplace() {\nconst sampleData = [\n    {\n        \"name\": \"Ape NFT#1\",\n        \"description\": \"Cool Ape\",\n        \"website\":\"http://axieinfinity.io\",\n        \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n        \"price\":\"0.03ETH\",\n        \"currentlySelling\":\"True\",\n        \"address\":\"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\",\n    },\n    {\n        \"name\": \"Ape NFT#2\",\n        \"description\": \"Angry Ape\",\n        \"website\":\"http://axieinfinity.io\",\n        \"image\":\"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\n        \"price\":\"0.03ETH\",\n        \"currentlySelling\":\"True\",\n        \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\n    },\n    {\n        \"name\": \"Ape NFT#3\",\n        \"description\": \"Sad Ape\",\n        \"website\":\"http://axieinfinity.io\",\n        \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n        \"price\":\"0.03ETH\",\n        \"currentlySelling\":\"True\",\n        \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\n    },\n];\nconst [data, updateData] = useState(sampleData);\nconst [dataFetched, updateFetched] = useState(false);\n\nasync function getAllNFTs() {\n    const ethers = require(\"ethers\");\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer)\n    //create an NFT Token\n    let transaction = await contract.getAllNFTs()\n\n    //Fetch all the details of every NFT from the contract and display\n    const items = await Promise.all(transaction.map(async i => {\n        const tokenURI = await contract.tokenURI(i.tokenId);\n        let meta = await axios.get(tokenURI);\n        meta = meta.data;\n\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n        let item = {\n            price,\n            tokenId: i.tokenId.toNumber(),\n            seller: i.seller,\n            owner: i.owner,\n            image: meta.image,\n            name: meta.name,\n            description: meta.description,\n        }\n        return item;\n    }))\n\n    updateFetched(true);\n    updateData(items);\n}\n\nif(!dataFetched)\n    getAllNFTs();\n\nreturn (\n    <div style={{\"min-height\":\"100vh\", backgroundImage: `url(${background})`, height: '100vh', width: '100vw', backgroundRepeat: \"no-repeat\", backgroundSize: 'cover',}}>\n        <Navbar></Navbar>\n        <div className=\"max-w-2xl mx-auto py-8  sm:px-6 lg:max-w-7xl\" style={{\"min-height\":\"100vh\", backgroundImage: `url(${background})`, height: '100vh', width: '100vw', backgroundRepeat: \"no-repeat\", backgroundSize: 'cover',}}>\n            <div className=\"md:text-xl font-bold text-black\">\n                Our Products\n            </div>\n            <div className=\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\">\n                {data.map((value, index) => {\n                    return <NFTTile data={value} key={index}></NFTTile>;\n                })}\n            </div>\n        </div>\n        <Footer></Footer>        \n    </div>\n);\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}