[{"C:\\Users\\91918\\Desktop\\gta\\src\\index.js":"1","C:\\Users\\91918\\Desktop\\gta\\src\\reportWebVitals.js":"2","C:\\Users\\91918\\Desktop\\gta\\src\\App.js":"3","C:\\Users\\91918\\Desktop\\gta\\src\\components\\SellNFT.js":"4","C:\\Users\\91918\\Desktop\\gta\\src\\components\\NFTpage.js":"5","C:\\Users\\91918\\Desktop\\gta\\src\\components\\Home.js":"6","C:\\Users\\91918\\Desktop\\gta\\src\\components\\Profile.js":"7","C:\\Users\\91918\\Desktop\\gta\\src\\components\\Products.js":"8","C:\\Users\\91918\\Desktop\\gta\\src\\components\\Navbar.js":"9","C:\\Users\\91918\\Desktop\\gta\\src\\components\\Footer.js":"10","C:\\Users\\91918\\Desktop\\gta\\src\\pinata.js":"11","C:\\Users\\91918\\Desktop\\gta\\src\\components\\NFTTile.js":"12"},{"size":1171,"mtime":1669711077000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1660918317000,"results":"15","hashOfConfig":"14"},{"size":921,"mtime":1669711061000,"results":"16","hashOfConfig":"14"},{"size":5929,"mtime":1669711707000,"results":"17","hashOfConfig":"14"},{"size":4122,"mtime":1669802550000,"results":"18","hashOfConfig":"14"},{"size":2414,"mtime":1669711990000,"results":"19","hashOfConfig":"14"},{"size":12544,"mtime":1669713709000,"results":"20","hashOfConfig":"14"},{"size":3180,"mtime":1669972814268,"results":"21","hashOfConfig":"14"},{"size":4298,"mtime":1669802614000,"results":"22","hashOfConfig":"14"},{"size":384,"mtime":1669710571000,"results":"23","hashOfConfig":"14"},{"size":2564,"mtime":1660918317000,"results":"24","hashOfConfig":"14"},{"size":687,"mtime":1669802582000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"5ed126",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"C:\\Users\\91918\\Desktop\\gta\\src\\index.js",["70"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport SellNFT from './components/SellNFT';\nimport Marketplace from './components/Products';\nimport Profile from './components/Profile';\nimport NFTPage from './components/NFTpage';\nimport Home from './components/Home';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Marketplace />}/>\n        <Route path=\"/sellNFT\" element={<SellNFT />}/> \n        <Route path=\"/nftPage/:tokenId\" element={<NFTPage />}/>        \n        <Route path=\"/Profile\" element={<Profile />}/> \n        <Route path=\"/Home\" element={<Home/>}/>\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\91918\\Desktop\\gta\\src\\reportWebVitals.js",[],[],"C:\\Users\\91918\\Desktop\\gta\\src\\App.js",["71","72"],[],"import './App.css';\nimport Navbar from './components/Navbar.js';\nimport Marketplace from './components/Products';\nimport Profile from './components/Profile';\nimport SellNFT from './components/SellNFT';\nimport NFTPage from './components/NFTpage';\nimport ReactDOM from \"react-dom/client\";\nimport Footer from './components/Footer';\nimport Home from './components/Home';\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <Routes>\n          <Navbar />\n          <Route path=\"/\" element={<Home />}/>\n          <Route path=\"/nftPage\" element={<NFTPage />}/>        \n          <Route path=\"/sellNFT\" element={<SellNFT />}/>\n          <Route path=\"/Products\" element={<Marketplace />}/> \n          <Route path=\"/Profile\" element={<Profile />}/>     \n          <Footer />          \n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\91918\\Desktop\\gta\\src\\components\\SellNFT.js",["73"],[],"import Navbar from \"./Navbar\";\nimport { useState } from \"react\";\nimport { uploadFileToIPFS, uploadJSONToIPFS } from \"../pinata\";\nimport Marketplace from '../Marketplace.json';\nimport { useLocation } from \"react-router\";\nimport Footer from \"./Footer\";\nimport background from \"../images/boat.png\";\n\nexport default function SellNFT () {\n    const [formParams, updateFormParams] = useState({ name: '', description: '', price: ''});\n    const [fileURL, setFileURL] = useState(null);\n    const ethers = require(\"ethers\");\n    const [message, updateMessage] = useState('');\n    const location = useLocation();\n\n    //This function uploads the NFT image to IPFS\n    async function OnChangeFile(e) {\n        var file = e.target.files[0];\n        //check for file extension\n        try {\n            //upload the file to IPFS\n            const response = await uploadFileToIPFS(file);\n            if(response.success === true) {\n                console.log(\"Uploaded image to Pinata: \", response.pinataURL)\n                setFileURL(response.pinataURL);\n            }\n        }\n        catch(e) {\n            console.log(\"Error during file upload\", e);\n        }\n    }\n\n    //This function uploads the metadata to IPFS\n    async function uploadMetadataToIPFS() {\n        const {name, description, price} = formParams;\n        //Make sure that none of the fields are empty\n        if( !name || !description || !price || !fileURL)\n            return;\n\n        const nftJSON = {\n            name, description, price, image: fileURL\n        }\n\n        try {\n            //upload the metadata JSON to IPFS\n            const response = await uploadJSONToIPFS(nftJSON);\n            if(response.success === true){\n                console.log(\"Uploaded JSON to Pinata: \", response)\n                return response.pinataURL;\n            }\n        }\n        catch(e) {\n            console.log(\"error uploading JSON metadata:\", e)\n        }\n    }\n\n    async function listNFT(e) {\n        e.preventDefault();\n\n        //Upload data to IPFS\n        try {\n            const metadataURL = await uploadMetadataToIPFS();\n            //After adding your Hardhat network to your metamask, this code will get providers and signers\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n            updateMessage(\"Please wait.. uploading (upto 5 mins)\")\n\n            //Pull the deployed contract instance\n            let contract = new ethers.Contract(Marketplace.address, Marketplace.abi, signer)\n\n            //massage the params to be sent to the create NFT request\n            const price = ethers.utils.parseUnits(formParams.price, 'ether')\n            let listingPrice = await contract.getListPrice()\n            listingPrice = listingPrice.toString()\n\n            //actually create the NFT\n            let transaction = await contract.createToken(metadataURL, price, { value: listingPrice })\n            await transaction.wait()\n\n            alert(\"Successfully listed your NFT!\");\n            updateMessage(\"\");\n            updateFormParams({ name: '', description: '', price: ''});\n            window.location.replace(\"/\")\n        }\n        catch(e) {\n            alert( \"Upload error\"+e )\n        }\n    }\n\n    console.log(\"Working\", process.env);\n    return (\n        <div className=\"\" style={{\"min-height\":\"100vh\", backgroundImage: `url(${background})`, height: '100vh', width: '100vw', backgroundRepeat: \"no-repeat\", backgroundSize: 'cover',}}>\n        <Navbar></Navbar>\n        <div className=\"flex flex-col place-items-center mt-10\" id=\"nftForm\">\n            <form className=\"bg-red shadow-md rounded px-4 pt-2 pb-4 mb-2\">\n            <h3 className=\"text-center font-bold text-green-500 mb-8\">Upload NFT</h3>\n                <div className=\"mb-4\">\n                    <label className=\"block text-green-500 text-sm font-bold mb-2\" htmlFor=\"name\">Name</label>\n                    <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"Wizard Harry\" onChange={e => updateFormParams({...formParams, name: e.target.value})} value={formParams.name}></input>\n                </div>\n                <div className=\"mb-6\">\n                    <label className=\"block text-green-500 text-sm font-bold mb-2\" htmlFor=\"description\">Description</label>\n                    <textarea className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" cols=\"40\" rows=\"5\" id=\"description\" type=\"text\" placeholder=\"Harry Potter Collection\" value={formParams.description} onChange={e => updateFormParams({...formParams, description: e.target.value})}></textarea>\n                </div>\n                <div className=\"mb-6\">\n                    <label className=\"block text-green-500 text-sm font-bold mb-2\" htmlFor=\"price\">Price</label>\n                    <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" type=\"number\" placeholder=\"Ex: 0.1 ETH\" step=\"0.01\" value={formParams.price} onChange={e => updateFormParams({...formParams, price: e.target.value})}></input>\n                </div>\n                <div>\n                    <label className=\"block text-green-500 text-sm font-bold mb-2\" htmlFor=\"image\">Upload Image upto 5 MB</label>\n                    <input type={\"file\"} onChange={OnChangeFile}></input>\n                </div>\n                <br></br>\n                <div className=\"text-green text-center\">{message}</div>\n                <button onClick={listNFT} className=\"font-bold mt-10 w-full bg-green-500 text-white rounded p-2 shadow-lg\">\n                    Mint your NFT!!\n                </button>\n            </form>\n        </div>\n        <Footer></Footer>\n        </div>\n    )\n}","C:\\Users\\91918\\Desktop\\gta\\src\\components\\NFTpage.js",["74","75","76"],[],"import Navbar from \"./Navbar\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Footer from \"./Footer\";\n\nexport default function NFTPage (props) {\n\nconst [data, updateData] = useState({});\nconst [dataFetched, updateDataFetched] = useState(false);\nconst [message, updateMessage] = useState(\"\");\nconst [currAddress, updateCurrAddress] = useState(\"0x\");\n\nasync function getNFTData(tokenId) {\n    const ethers = require(\"ethers\");\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const addr = await signer.getAddress();\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer)\n    //create an NFT Token\n    const tokenURI = await contract.tokenURI(tokenId);\n    const listedToken = await contract.getListedTokenForId(tokenId);\n    let meta = await axios.get(tokenURI);\n    meta = meta.data;\n    console.log(listedToken);\n\n    let item = {\n        price: meta.price,\n        tokenId: tokenId,\n        seller: listedToken.seller,\n        owner: listedToken.owner,\n        image: meta.image,\n        name: meta.name,\n        description: meta.description,\n    }\n    console.log(item);\n    updateData(item);\n    updateDataFetched(true);\n    console.log(\"address\", addr)\n    updateCurrAddress(addr);\n}\n\nasync function buyNFT(tokenId) {\n    try {\n        const ethers = require(\"ethers\");\n        //After adding your Hardhat network to your metamask, this code will get providers and signers\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n\n        //Pull the deployed contract instance\n        let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n        const salePrice = ethers.utils.parseUnits(data.price, 'ether')\n        updateMessage(\"Buying the NFT... Please Wait (Upto 5 mins)\")\n        //run the executeSale function\n        let transaction = await contract.executeSale(tokenId, {value:salePrice});\n        await transaction.wait();\n\n        alert('You successfully bought the NFT!');\n        updateMessage(\"\");\n    }\n    catch(e) {\n        alert(\"Upload Error\"+e)\n    }\n}\n\n    const params = useParams();\n    const tokenId = params.tokenId;\n    if(!dataFetched)\n        getNFTData(tokenId);\n\n    return(\n        <div style={{\"min-height\":\"100vh\"}}>\n            <Navbar></Navbar>\n            <div className=\"flex ml-20 mt-20\">\n                <img src={data.image} alt=\"\" className=\"w-2/5\" />\n                <div className=\"text-xl ml-20 space-y-8 text-black shadow-2xl rounded-lg border-2 p-5\">\n                    <div>\n                        Name: {data.name}\n                    </div>\n                    <div>\n                        Description: {data.description}\n                    </div>\n                    <div>\n                        Price: <span className=\"\">{data.price + \" ETH\"}</span>\n                    </div>\n                    <div>\n                        Owner: <span className=\"text-sm\">{data.owner}</span>\n                    </div>\n                    <div>\n                        Seller: <span className=\"text-sm\">{data.seller}</span>\n                    </div>\n                    <div>\n                    { currAddress == data.owner || currAddress == data.seller ?\n                        <button className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-black font-bold py-2 px-4 rounded text-sm\" onClick={() => buyNFT(tokenId)}>Buy this NFT</button>\n                        : <div className=\"text-green-700\">You are the owner of this NFT</div>\n                    }\n                    \n                    <div className=\"text-green text-center mt-3\">{message}</div>\n                    </div>\n                </div>\n            </div>\n            <Footer></Footer>\n        </div>\n    )\n}","C:\\Users\\91918\\Desktop\\gta\\src\\components\\Home.js",["77","78"],[],"import banner from \"../images/itemm.png\";\nimport logo1 from \"../images/logo.png\";\nimport background from \"../images/boat.png\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nfunction Home() {\n\treturn (\n        <><Navbar></Navbar><main class=\"dark:bg-gray-800 bg-white relative overflow-hidden z-0\">\n            <div style={{ backgroundImage: `url(${background})`, height: '100vh', width: '100vw', backgroundRepeat: \"no-repeat\", backgroundSize: 'cover', }}>\n                <div class=\"container mx-auto pt-6 flex relative py-16\">\n                    <div class=\"sm:w-2/3 lg:w-20/5 flex flex-col relative z-20\">\n                        <img src={logo1} class=\" md:max-w-lg m-auto\" />\n                        <h1 class=\"font-bebas-neue uppercase text-3xl sm:text-2xl font-black flex flex-col leading-none dark:text-black text-gray-800 text-center\">\n                            Presenting Infitity\n                        </h1>\n                        <p class=\"text-sm sm:text-base text-gray-700 dark:text-black text-center \">\n                            an Environment conscious NFT marketplace\n                        </p>\n                        <p class=\"text-sm sm:text-base text-gray-700 dark:text-black text-center \">\n                            to sell and buy your next digital art\n                        </p>\n                        <div class=\"flex flex-col\">\n                            <a\n                                href=\"/\"\n                                class=\"uppercase py-2 px-6 rounded-lg bg-black border-2 border-transparent-500 text-white hover:bg-white-600 text-md text-center\"\n                            >\n                                Marketplace\n                            </a>\n                            <a\n                                href=\"/sellNFT\"\n                                class=\"uppercase py-2 px-6 rounded-lg bg-white border-2 border-transparent-500 text-black hover:bg-black-600 text-md text-center\"\n                            >\n                                Mint NFTs\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"hidden sm:block sm:w-2/3 lg:w-4/5 relative\">\n                        <img src={banner} class=\" md:max-w-lg m-auto\" />\n                    </div>\n                </div>\n            </div>\n        </main><Footer></Footer></>\n\n\n\t);\n}\n\nexport default Home;","C:\\Users\\91918\\Desktop\\gta\\src\\components\\Profile.js",["79","80","81","82","83","84","85","86","87","88","89","90"],[],"import Naresh from \"../images/naresh.jpg\";\nimport Vikram from \"../images/vikram.jpg\";\nimport Anuraag from \"../images/anuraag.jpg\";\nimport Akash from \"../images/akash.jpg\";\nimport Shreya from \"../images/shreya.jpg\";\nimport Vivek from '../images/vivek.jpg'\nimport Footer from \"./Footer\";\nimport Navbar from \"./Navbar\";\nfunction Profile() {\n\treturn (\n        <><Navbar></Navbar><div class=\"p-1\">\n            <div class=\"flex items-center flex-col md:flex-row\">\n                <div class=\"p-11\">\n                    <div class=\"text-center mb-4 opacity-90\">\n                        <a href=\"#\" class=\"block\">\n                            <img\n                                alt=\"profil\"\n                                src={Naresh}\n                                class=\"mx-auto object-cover rounded-full h-40 w-40 \" />\n                        </a>\n                    </div>\n                    <div class=\"text-center\">\n                        <p class=\"text-xl text-black-800 dark:text-black\">Naresh Kumar Kaushal</p>\n                        <p class=\"text-l text-black-500 dark:text-black-200 font-light\">\n                            Vikraman\n                            Graduate Student\n                        </p>\n                        <p class=\"text-sm text-black-500 dark:text-black-400 max-w-xs py-4 font-light\"></p>\n                    </div>\n                    <div class=\"pt-8 flex border-t border-black-200 w-44 mx-auto text-black-500 items-center justify-around\">\n                        <a href=\"#\" alt=\"linkedin\">\n                            <svg\n                                width=\"30\"\n                                height=\"30\"\n                                fill=\"currentColor\"\n                                class=\"text-xl hover:text-black-800 dark:hover:text-black transition-colors duration-200\"\n                                viewBox=\"0 0 1792 1792\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path d=\"M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\"></path>\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"p-4\">\n                    <div class=\"text-center mb-4 opacity-90\">\n                        <a href=\"#\" class=\"block relative\">\n                            <img\n                                alt=\"profil\"\n                                src={Anuraag}\n                                class=\"mx-auto object-cover rounded-full h-40 w-40 \" />\n                        </a>\n                    </div>\n                    <div class=\"text-center\">\n                        <p class=\"text-xl text-black-800 dark:text-black\">Anuraag Velammati</p>\n                        <p class=\"text-l text-black-500 dark:text-black-200 font-light\">\n                            Graduate Student\n                        </p>\n                        <p class=\"text-sm text-black-500 dark:text-black-400 max-w-xs py-4 font-light\"></p>\n                    </div>\n                    <div class=\"pt-8 flex border-t border-black-200 w-44 mx-auto text-black-500 items-center justify-around\">\n                        <a href=\"#\" alt=\"linkedin\">\n                            <svg\n                                width=\"30\"\n                                height=\"30\"\n                                fill=\"currentColor\"\n                                class=\"text-xl hover:text-black-800 dark:hover:text-black transition-colors duration-200\"\n                                viewBox=\"0 0 1792 1792\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path d=\"M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\"></path>\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"p-4\">\n                    <div class=\"text-center mb-4 opacity-90\">\n                        <a href=\"#\" class=\"block relative\">\n                            <img\n                                alt=\"profil\"\n                                src={Vikram}\n                                class=\"mx-auto object-cover rounded-full h-40 w-40 \" />\n                        </a>\n                    </div>\n                    <div class=\"text-center\">\n                        <p class=\"text-xl text-black-800 dark:text-black\">Vikraman Senthil Kumar</p>\n                        <p class=\"text-l text-black-500 dark:text-black-200 font-light\">\n                            Graduate Student\n                        </p>\n                        <p class=\"text-sm text-black-500 dark:text-black-400 max-w-xs py-4 font-light\"></p>\n                    </div>\n                    <div class=\"pt-8 flex border-t border-black-200 w-44 mx-auto text-black-500 items-center justify-around\">\n                        <a href=\"#\" alt=\"linkedin\">\n                            <svg\n                                width=\"30\"\n                                height=\"30\"\n                                fill=\"currentColor\"\n                                class=\"text-xl hover:text-black-800 dark:hover:text-black transition-colors duration-200\"\n                                viewBox=\"0 0 1792 1792\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path d=\"M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\"></path>\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"p-4\">\n                    <div class=\"text-center mb-4 opacity-90\">\n                        <a href=\"#\" class=\"block relative\">\n                            <img\n                                alt=\"profil\"\n                                src={Vivek}\n                                class=\"mx-auto object-cover rounded-full h-40 w-40 \" />\n                        </a>\n                    </div>\n                    <div class=\"text-center\">\n                        <p class=\"text-xl text-black-800 dark:text-black\">Vivek</p>\n                        <p class=\"text-l text-black-500 dark:text-black-200 font-light\">\n                            Graduate Student\n                        </p>\n                        <p class=\"text-sm text-black-500 dark:text-black-400 max-w-xs py-4 font-light\"></p>\n                    </div>\n                    <div class=\"pt-8 flex border-t border-black-200 w-44 mx-auto text-black-500 items-center justify-around\">\n                        <a href=\"#\" alt=\"linkedin\">\n                            <svg\n                                width=\"30\"\n                                height=\"30\"\n                                fill=\"currentColor\"\n                                class=\"text-xl hover:text-black-800 dark:hover:text-black transition-colors duration-200\"\n                                viewBox=\"0 0 1792 1792\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path d=\"M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\"></path>\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"p-4\">\n                    <div class=\"text-center mb-4 opacity-90\">\n                        <a href=\"#\" class=\"block relative\">\n                            <img\n                                alt=\"profil\"\n                                src={Akash}\n                                class=\"mx-auto object-cover rounded-full h-40 w-40 \" />\n                        </a>\n                    </div>\n                    <div class=\"text-center\">\n                        <p class=\"text-xl text-black-800 dark:text-black\">Akash Salendra Bonagari</p>\n                        <p class=\"text-l text-black-500 dark:text-black-200 font-light\">\n                            Graduate Student\n                        </p>\n                        <p class=\"text-sm text-black-500 dark:text-black-400 max-w-xs py-4 font-light\"></p>\n                    </div>\n                    <div class=\"pt-8 flex border-t border-black-200 w-44 mx-auto text-black-500 items-center justify-around\">\n                        <a href=\"#\" alt=\"linkedin\">\n                            <svg\n                                width=\"30\"\n                                height=\"30\"\n                                fill=\"currentColor\"\n                                class=\"text-xl hover:text-black-800 dark:hover:text-black transition-colors duration-200\"\n                                viewBox=\"0 0 1792 1792\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path d=\"M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\"></path>\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"p-4\">\n                    <div class=\"text-center mb-4 opacity-90\">\n                        <a href=\"#\" class=\"block relative\">\n                            <img\n                                alt=\"profil\"\n                                src={Shreya}\n                                class=\"mx-auto object-cover rounded-full h-40 w-40 \" />\n                        </a>\n                    </div>\n                    <div class=\"text-center\">\n                        <p class=\"text-xl text-black-800 dark:text-black\">\n                            Shreya Sharma\n                        </p>\n                        <p class=\"text-l text-black-500 dark:text-black-200 font-light\">\n                            Graduate Student\n                        </p>\n                        <p class=\"text-sm text-black-500 dark:text-black-400 max-w-xs py-4 font-light\"></p>\n                    </div>\n                    <div class=\"pt-8 flex border-t border-black-200 w-44 mx-auto text-black-500 items-center justify-around\">\n                        <a href=\"#\" alt=\"linkedin\">\n                            <svg\n                                width=\"30\"\n                                height=\"30\"\n                                fill=\"currentColor\"\n                                class=\"text-xl hover:text-black-800 dark:hover:text-black transition-colors duration-200\"\n                                viewBox=\"0 0 1792 1792\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path d=\"M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\"></path>\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <Footer></Footer>\n        </div></>\n\t);\n}\nexport default Profile;","C:\\Users\\91918\\Desktop\\gta\\src\\components\\Products.js",["91","92"],[],"C:\\Users\\91918\\Desktop\\gta\\src\\components\\Navbar.js",["93","94","95","96","97","98","99"],[],"import logos from '../images/Nav_logo.png'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\n\nfunction Navbar() {\n\nconst [connected, toggleConnect] = useState(false);\nconst location = useLocation();\nconst [currAddress, updateAddress] = useState('0x');\n\nasync function getAddress() {\n  const ethers = require(\"ethers\");\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const addr = await signer.getAddress();\n  updateAddress(addr);\n}\n\nfunction updateButton() {\n  const ethereumButton = document.querySelector('.enableEthereumButton');\n  ethereumButton.textContent = \"Connected\";\n  ethereumButton.classList.remove(\"hover:bg-green-500\");\n  ethereumButton.classList.remove(\"bg-green-500\");\n  ethereumButton.classList.add(\"hover:bg-green-500\");\n  ethereumButton.classList.add(\"bg-green-500\");\n}\n\nasync function connectWebsite() {\n\n    const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n    if(chainId !== '0x5')\n    {\n      //alert('Incorrect network! Switch your metamask network to Rinkeby');\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x5' }],\n     })\n    }  \n    await window.ethereum.request({ method: 'eth_requestAccounts' })\n      .then(() => {\n        updateButton();\n        console.log(\"here\");\n        getAddress();\n        window.location.replace(location.pathname)\n      });\n}\n\n  useEffect(() => {\n    let val = window.ethereum.isConnected();\n    if(val)\n    {\n      console.log(\"here\");\n      getAddress();\n      toggleConnect(val);\n      updateButton();\n    }\n\n    window.ethereum.on('accountsChanged', function(accounts){\n      window.location.replace(location.pathname)\n    })\n  });\n\n    return (\n      <div className=\"\">\n        <nav className=\"w-screen\">\n          <ul className='flex items-end justify-between py-3 bg-black text-white pr-5'>\n          <li className='flex items-end ml-5 pb-0'>\n            <Link to=\"/Home\">\n            <img src={logos} alt=\"\" width={120} height={120} className=\"inline-block -mt-2\"/>\n            <div className='inline-block font-bold text-xl ml-2'>\n              Infinity NFT Marketplace\n            </div>\n            </Link>\n          </li>\n          <li className='w-3/6'>\n            <ul className='lg:flex justify-between font-bold mr-10 text-lg'>\n            {location.pathname === \"/Home\" ? \n              <li className='border-b-2 hover:pb-0 p-2'>\n                <Link to=\"/Home\">Home</Link>\n              </li>\n              :\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\n                <Link to=\"/Home\">Home</Link>\n              </li>              \n              }\n              {location.pathname === \"/\" ? \n              <li className='border-b-2 hover:pb-0 p-2'>\n                <Link to=\"/\">Products</Link>\n              </li>\n              :\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\n                <Link to=\"/\">Products</Link>\n              </li>              \n              }\n              {location.pathname === \"/sellNFT\" ? \n              <li className='border-b-2 hover:pb-0 p-2'>\n                <Link to=\"/sellNFT\">Mint an NFT</Link>\n              </li>\n              :\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\n                <Link to=\"/sellNFT\">Mint an NFT</Link>\n              </li>              \n              }              \n              {location.pathname === \"/profile\" ? \n              <li className='border-b-2 hover:pb-0 p-2'>\n                <Link to=\"/profile\">Blog</Link>\n              </li>\n              :\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\n                <Link to=\"/profile\">Blog</Link>\n              </li>              \n              }  \n              <li>\n                <button className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\" onClick={connectWebsite}>{connected? \"Connected\":\"Connect Wallet\"}</button>\n              </li>\n            </ul>\n          </li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n\n  export default Navbar;","C:\\Users\\91918\\Desktop\\gta\\src\\components\\Footer.js",[],[],"C:\\Users\\91918\\Desktop\\gta\\src\\pinata.js",[],[],"C:\\Users\\91918\\Desktop\\gta\\src\\components\\NFTTile.js",["100"],[],"import {\n    BrowserRouter as Router,\n    Link,\n  } from \"react-router-dom\";\n\nfunction NFTTile (data) {\n    const newTo = {\n        pathname:\"/nftPage/\"+data.data.tokenId\n    }\n    return (\n        <Link to={newTo}>\n        <div className=\"max-w-2xl mx-auto py-8  sm:px-6 lg:max-w-7xl\">\n            <img src={data.data.image} alt=\"\" className=\"w-72 h-80 rounded-full\" />\n            <div className= \"text-white bg-black\">\n                <strong className=\"text-xl\">{data.data.name}</strong>\n                <p className=\"display-inline\">\n                    {data.data.description}\n                </p>\n            </div>\n        </div>\n        </Link>\n    )\n}\n\nexport default NFTTile;\n",{"ruleId":"101","severity":1,"message":"102","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":11},{"ruleId":"101","severity":1,"message":"105","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":12,"column":3,"nodeType":"103","messageId":"104","endLine":12,"endColumn":16},{"ruleId":"101","severity":1,"message":"107","line":14,"column":11,"nodeType":"103","messageId":"104","endLine":14,"endColumn":19},{"ruleId":"101","severity":1,"message":"108","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":96,"column":35,"nodeType":"111","messageId":"112","endLine":96,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":96,"column":64,"nodeType":"111","messageId":"112","endLine":96,"endColumn":66},{"ruleId":"113","severity":1,"message":"114","line":12,"column":25,"nodeType":"115","endLine":12,"endColumn":72},{"ruleId":"113","severity":1,"message":"114","line":38,"column":25,"nodeType":"115","endLine":38,"endColumn":73},{"ruleId":"116","severity":1,"message":"117","line":15,"column":25,"nodeType":"115","endLine":15,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":31,"column":25,"nodeType":"115","endLine":31,"endColumn":52},{"ruleId":"116","severity":1,"message":"117","line":47,"column":25,"nodeType":"115","endLine":47,"endColumn":60},{"ruleId":"116","severity":1,"message":"117","line":62,"column":25,"nodeType":"115","endLine":62,"endColumn":52},{"ruleId":"116","severity":1,"message":"117","line":78,"column":25,"nodeType":"115","endLine":78,"endColumn":60},{"ruleId":"116","severity":1,"message":"117","line":93,"column":25,"nodeType":"115","endLine":93,"endColumn":52},{"ruleId":"116","severity":1,"message":"117","line":109,"column":25,"nodeType":"115","endLine":109,"endColumn":60},{"ruleId":"116","severity":1,"message":"117","line":124,"column":25,"nodeType":"115","endLine":124,"endColumn":52},{"ruleId":"116","severity":1,"message":"117","line":140,"column":25,"nodeType":"115","endLine":140,"endColumn":60},{"ruleId":"116","severity":1,"message":"117","line":155,"column":25,"nodeType":"115","endLine":155,"endColumn":52},{"ruleId":"116","severity":1,"message":"117","line":171,"column":25,"nodeType":"115","endLine":171,"endColumn":60},{"ruleId":"116","severity":1,"message":"117","line":188,"column":25,"nodeType":"115","endLine":188,"endColumn":52},{"ruleId":"101","severity":1,"message":"118","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":14},{"ruleId":"101","severity":1,"message":"119","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":18},{"ruleId":"101","severity":1,"message":"120","line":3,"column":20,"nodeType":"103","messageId":"104","endLine":3,"endColumn":26},{"ruleId":"101","severity":1,"message":"121","line":4,"column":3,"nodeType":"103","messageId":"104","endLine":4,"endColumn":9},{"ruleId":"101","severity":1,"message":"122","line":5,"column":3,"nodeType":"103","messageId":"104","endLine":5,"endColumn":8},{"ruleId":"101","severity":1,"message":"123","line":7,"column":3,"nodeType":"103","messageId":"104","endLine":7,"endColumn":16},{"ruleId":"101","severity":1,"message":"124","line":8,"column":3,"nodeType":"103","messageId":"104","endLine":8,"endColumn":12},{"ruleId":"101","severity":1,"message":"125","line":17,"column":8,"nodeType":"103","messageId":"104","endLine":17,"endColumn":19},{"ruleId":"126","severity":1,"message":"127","line":56,"column":3,"nodeType":"103","endLine":56,"endColumn":12,"suggestions":"128"},{"ruleId":"101","severity":1,"message":"120","line":2,"column":22,"nodeType":"103","messageId":"104","endLine":2,"endColumn":28},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'BrowserRouter' is defined but never used.","'location' is assigned a value but never used.","'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Footer' is defined but never used.","'background' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'currAddress' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'toggleConnect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [location.pathname] as a second argument to the useEffect Hook.",["129"],{"desc":"130","fix":"131"},"Add dependencies array: [location.pathname]",{"range":"132","text":"133"},[1906,1906],", [location.pathname]"]